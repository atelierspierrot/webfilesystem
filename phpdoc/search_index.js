var search_data = {
    'index': {
        'searchIndex': ["webfilesystem","webfilesystem\\filetype","webfilesystem\\filetype\\webimage","webfilesystem\\filetype\\webvideo","webfilesystem\\finder","webfilesystem\\webfileinfo","webfilesystem\\webfilesystem","webfilesystem\\webfilesystemiterator","webfilesystem\\webrecursivedirectoryiterator","webfilesystem\\filetype\\webimage::__construct","webfilesystem\\filetype\\webimage::setthumbfilename","webfilesystem\\filetype\\webimage::getthumbfilename","webfilesystem\\filetype\\webimage::getthumbbasename","webfilesystem\\filetype\\webimage::setthumbrootdir","webfilesystem\\filetype\\webimage::getthumbrootdir","webfilesystem\\filetype\\webimage::setthumbpath","webfilesystem\\filetype\\webimage::getthumbpath","webfilesystem\\filetype\\webimage::getthumbpathname","webfilesystem\\filetype\\webimage::getthumbrealpath","webfilesystem\\filetype\\webimage::getthumbwebpath","webfilesystem\\filetype\\webimage::getthumbrealwebpath","webfilesystem\\filetype\\webimage::getinfos","webfilesystem\\filetype\\webimage::getimageinfos","webfilesystem\\filetype\\webimage::getiptcinfos","webfilesystem\\filetype\\webimage::getexifinfos","webfilesystem\\filetype\\webimage::exists","webfilesystem\\filetype\\webimage::thumbexists","webfilesystem\\filetype\\webimage::isimage","webfilesystem\\filetype\\webimage::getgps","webfilesystem\\filetype\\webimage::gps2num","webfilesystem\\filetype\\webimage::getdatefromexif","webfilesystem\\filetype\\webvideo::__construct","webfilesystem\\filetype\\webvideo::setthumbfilename","webfilesystem\\filetype\\webvideo::getthumbfilename","webfilesystem\\filetype\\webvideo::getthumbbasename","webfilesystem\\filetype\\webvideo::setthumbrootdir","webfilesystem\\filetype\\webvideo::getthumbrootdir","webfilesystem\\filetype\\webvideo::setthumbpath","webfilesystem\\filetype\\webvideo::getthumbpath","webfilesystem\\filetype\\webvideo::getthumbpathname","webfilesystem\\filetype\\webvideo::getthumbrealpath","webfilesystem\\filetype\\webvideo::getthumbwebpath","webfilesystem\\filetype\\webvideo::getthumbrealwebpath","webfilesystem\\filetype\\webvideo::getinfos","webfilesystem\\filetype\\webvideo::getvideoinfos","webfilesystem\\filetype\\webvideo::exists","webfilesystem\\filetype\\webvideo::thumbexists","webfilesystem\\filetype\\webvideo::isvideo","webfilesystem\\filetype\\webvideo::getdatefromexif","webfilesystem\\finder::init","webfilesystem\\finder::reset","webfilesystem\\finder::setinited","webfilesystem\\finder::isinited","webfilesystem\\finder::setrootdir","webfilesystem\\finder::getrootdir","webfilesystem\\finder::adddirectory","webfilesystem\\finder::setdirectories","webfilesystem\\finder::getdirectories","webfilesystem\\finder::addexcludeddirectory","webfilesystem\\finder::setexcludeddirectories","webfilesystem\\finder::getexcludeddirectories","webfilesystem\\finder::addnamemask","webfilesystem\\finder::setnamemasks","webfilesystem\\finder::getnamemasks","webfilesystem\\finder::addexcludednamemask","webfilesystem\\finder::setexcludednamemasks","webfilesystem\\finder::getexcludednamemasks","webfilesystem\\finder::addextensionmask","webfilesystem\\finder::setextensionmasks","webfilesystem\\finder::getextensionmasks","webfilesystem\\finder::addexcludedextensionmask","webfilesystem\\finder::setexcludedextensionmasks","webfilesystem\\finder::getexcludedextensionmasks","webfilesystem\\finder::setdepth","webfilesystem\\finder::getdepth","webfilesystem\\finder::setiteratorflags","webfilesystem\\finder::getiteratorflags","webfilesystem\\finder::setflag","webfilesystem\\finder::getflag","webfilesystem\\finder::files","webfilesystem\\finder::dirs","webfilesystem\\finder::links","webfilesystem\\finder::dots","webfilesystem\\finder::depth","webfilesystem\\finder::name","webfilesystem\\finder::notname","webfilesystem\\finder::extension","webfilesystem\\finder::notextension","webfilesystem\\finder::in","webfilesystem\\finder::notin","webfilesystem\\finder::root","webfilesystem\\finder::images","webfilesystem\\finder::videos","webfilesystem\\finder::is","webfilesystem\\finder::isfile","webfilesystem\\finder::isdir","webfilesystem\\finder::islink","webfilesystem\\finder::isimage","webfilesystem\\finder::isvideo","webfilesystem\\finder::isdotfile","webfilesystem\\finder::getiterator","webfilesystem\\finder::current","webfilesystem\\finder::key","webfilesystem\\finder::next","webfilesystem\\finder::rewind","webfilesystem\\finder::valid","webfilesystem\\webfileinfo::__construct","webfilesystem\\webfileinfo::setflags","webfilesystem\\webfileinfo::getflags","webfilesystem\\webfileinfo::getextension","webfilesystem\\webfileinfo::getrealpath","webfilesystem\\webfileinfo::getfilename","webfilesystem\\webfileinfo::setrootdir","webfilesystem\\webfileinfo::getrootdir","webfilesystem\\webfileinfo::setwebpath","webfilesystem\\webfileinfo::getwebpath","webfilesystem\\webfileinfo::getrealwebpath","webfilesystem\\webfileinfo::exists","webfilesystem\\webfileinfo::pathexists","webfilesystem\\webfileinfo::rootdirexists","webfilesystem\\webfileinfo::gethumanreadablefilename","webfilesystem\\webfileinfo::getstat","webfilesystem\\webfileinfo::getmimetype","webfilesystem\\webfileinfo::getcharset","webfilesystem\\webfileinfo::getmime","webfilesystem\\webfilesystem::slashdirname","webfilesystem\\webfilesystem::gethumanreadablename","webfilesystem\\webfilesystem::getextensionname","webfilesystem\\webfilesystem::gettransformedfilesize","webfilesystem\\webfilesystem::getdatetimefromtimestamp","webfilesystem\\webfilesystem::iscommonfile","webfilesystem\\webfilesystem::isdotfile","webfilesystem\\webfilesystem::iscommonimage","webfilesystem\\webfilesystem::iscommonvideo","webfilesystem\\webfilesystemiterator::__construct","webfilesystem\\webfilesystemiterator::setflags","webfilesystem\\webfilesystemiterator::getflags","webfilesystem\\webfilesystemiterator::current","webfilesystem\\webfilesystemiterator::rewind","webfilesystem\\webfilesystemiterator::next","webfilesystem\\webfilesystemiterator::count","webfilesystem\\webrecursivedirectoryiterator::__construct","webfilesystem\\webrecursivedirectoryiterator::setfileclass","webfilesystem\\webrecursivedirectoryiterator::getfileclass","webfilesystem\\webrecursivedirectoryiterator::setfilevalidationcallback","webfilesystem\\webrecursivedirectoryiterator::getfilevalidationcallback","webfilesystem\\webrecursivedirectoryiterator::setdirectoryvalidationcallback","webfilesystem\\webrecursivedirectoryiterator::getdirectoryvalidationcallback","webfilesystem\\webrecursivedirectoryiterator::getchildren","webfilesystem\\webrecursivedirectoryiterator::getsubpath","webfilesystem\\webrecursivedirectoryiterator::getsubpathname","webfilesystem\\webrecursivedirectoryiterator::haschildren","webfilesystem\\webrecursivedirectoryiterator::seek","webfilesystem\\webrecursivedirectoryiterator::current","webfilesystem\\webrecursivedirectoryiterator::rewind","webfilesystem\\webrecursivedirectoryiterator::next","webfilesystem\\webrecursivedirectoryiterator::recursivecount"],
        'info': [["WebFilesystem","","WebFilesystem.html","","",3],["WebFilesystem\\FileType","","WebFilesystem\/FileType.html","","",3],["WebImage","WebFilesystem\\FileType","WebFilesystem\/FileType\/WebImage.html"," < WebFileInfo","",1],["WebVideo","WebFilesystem\\FileType","WebFilesystem\/FileType\/WebVideo.html"," < WebFileInfo","",1],["Finder","WebFilesystem","WebFilesystem\/Finder.html"," < AbstractStaticCreator","",1],["WebFileInfo","WebFilesystem","WebFilesystem\/WebFileInfo.html"," < SplFileInfo","Special web's version of the PHP >=5.1.2 standard class",1],["WebFilesystem","WebFilesystem","WebFilesystem\/WebFilesystem.html","","Commons static functions for the whole package",1],["WebFilesystemIterator","WebFilesystem","WebFilesystem\/WebFilesystemIterator.html"," < FilesystemIterator","Special web's version of the PHP >=5.3 standard class",1],["WebRecursiveDirectoryIterator","WebFilesystem","WebFilesystem\/WebRecursiveDirectoryIterator.html"," < WebFilesystemIterator","",1],["WebImage::__construct","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method___construct","(string $path, string $root_dir, string $file_name = null, bool $must_exist = true)","Construct a new myDirectory object",2],["WebImage::setThumbFilename","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_setThumbFilename","($file_name)","Sets the object thumb file name",2],["WebImage::getThumbFilename","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getThumbFilename","()","Get the object's thumb file name",2],["WebImage::getThumbBasename","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getThumbBasename","()","Get the object's thumb file name",2],["WebImage::setThumbRootDir","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_setThumbRootDir","(string $path)","Sets the object thumb root directory",2],["WebImage::getThumbRootDir","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getThumbRootDir","()","Get the object's thumb root directory",2],["WebImage::setThumbPath","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_setThumbPath","(string $path)","Sets the object thumb web path",2],["WebImage::getThumbPath","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getThumbPath","()","Get the object's thumb web path",2],["WebImage::getThumbPathname","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getThumbPathname","()","Get the object's thumb web path with file name",2],["WebImage::getThumbRealPath","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getThumbRealPath","()","Get the object's web real path (with the file_name)",2],["WebImage::getThumbWebPath","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getThumbWebPath","()","Get the object's thumb web path",2],["WebImage::getThumbRealWebPath","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getThumbRealWebPath","()","Get the object's web real path (with the file_name)",2],["WebImage::getInfos","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getInfos","()","Scan all image infos",2],["WebImage::getImageInfos","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getImageInfos","()","Scan image standrad infos",2],["WebImage::getIptcInfos","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getIptcInfos","()","Scan image IPTC infos",2],["WebImage::getExifInfos","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getExifInfos","()","Scan image EXIF infos",2],["WebImage::exists","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_exists","()","Check if the object exists",2],["WebImage::thumbExists","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_thumbExists","()","Check if the thumb exists",2],["WebImage::isImage","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_isImage","()","Returns TRUE if the object is an image",2],["WebImage::getGps","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getGps","($exifCoord, $hemi)","Returns the transformed value of an EXIF GPS field",2],["WebImage::gps2Num","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_gps2Num","(<abbr title=\"WebFilesystem\\FileType\\num\">num<\/abbr> $coordPart)","Returns a transformed GPS coordinate in a numeric floated",2],["WebImage::getDateFromExif","WebFilesystem\\FileType\\WebImage","WebFilesystem\/FileType\/WebImage.html#method_getDateFromExif","(int $date)","Returns the transformed date field form EXIF info to",2],["WebVideo::__construct","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method___construct","(string $path, string $root_dir, string $file_name = null, bool $must_exist = true)","Construct a new myDirectory object",2],["WebVideo::setThumbFilename","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_setThumbFilename","($file_name)","Sets the object thumb file name",2],["WebVideo::getThumbFilename","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_getThumbFilename","()","Get the object's thumb file name",2],["WebVideo::getThumbBasename","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_getThumbBasename","()","Get the object's thumb file name",2],["WebVideo::setThumbRootDir","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_setThumbRootDir","(string $path)","Sets the object thumb root directory",2],["WebVideo::getThumbRootDir","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_getThumbRootDir","()","Get the object's thumb root directory",2],["WebVideo::setThumbPath","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_setThumbPath","(string $path)","Sets the object thumb web path",2],["WebVideo::getThumbPath","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_getThumbPath","()","Get the object's thumb web path",2],["WebVideo::getThumbPathname","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_getThumbPathname","()","Get the object's thumb web path with file name",2],["WebVideo::getThumbRealPath","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_getThumbRealPath","()","Get the object's web real path (with the file_name)",2],["WebVideo::getThumbWebPath","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_getThumbWebPath","()","Get the object's thumb web path",2],["WebVideo::getThumbRealWebPath","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_getThumbRealWebPath","()","Get the object's web real path (with the file_name)",2],["WebVideo::getInfos","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_getInfos","()","Scan all image infos",2],["WebVideo::getVideoInfos","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_getVideoInfos","()","Scan video standrad infos",2],["WebVideo::exists","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_exists","()","Check if the object exists",2],["WebVideo::thumbExists","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_thumbExists","()","Check if the thumb exists",2],["WebVideo::isVideo","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_isVideo","()","Returns TRUE if the object is a video file",2],["WebVideo::getDateFromExif","WebFilesystem\\FileType\\WebVideo","WebFilesystem\/FileType\/WebVideo.html#method_getDateFromExif","(int $date)","Returns the transformed date field form EXIF info to",2],["Finder::init","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_init","($flags = 16432)","",2],["Finder::reset","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_reset","()","",2],["Finder::setInited","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_setInited","(bool $inited)","",2],["Finder::isInited","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_isInited","()","",2],["Finder::setRootDir","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_setRootDir","(string $path)","",2],["Finder::getRootDir","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_getRootDir","()","",2],["Finder::addDirectory","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_addDirectory","(string $path)","",2],["Finder::setDirectories","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_setDirectories","(array $paths)","",2],["Finder::getDirectories","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_getDirectories","()","",2],["Finder::addExcludedDirectory","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_addExcludedDirectory","(string $path)","",2],["Finder::setExcludedDirectories","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_setExcludedDirectories","(array $paths)","",2],["Finder::getExcludedDirectories","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_getExcludedDirectories","()","",2],["Finder::addNameMask","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_addNameMask","(string $mask)","",2],["Finder::setNameMasks","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_setNameMasks","(array $masks)","",2],["Finder::getNameMasks","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_getNameMasks","()","",2],["Finder::addExcludedNameMask","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_addExcludedNameMask","(string $mask)","",2],["Finder::setExcludedNameMasks","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_setExcludedNameMasks","(array $masks)","",2],["Finder::getExcludedNameMasks","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_getExcludedNameMasks","()","",2],["Finder::addExtensionMask","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_addExtensionMask","(string $mask)","",2],["Finder::setExtensionMasks","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_setExtensionMasks","(array $masks)","",2],["Finder::getExtensionMasks","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_getExtensionMasks","()","",2],["Finder::addExcludedExtensionMask","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_addExcludedExtensionMask","(string $mask)","",2],["Finder::setExcludedExtensionMasks","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_setExcludedExtensionMasks","(array $masks)","",2],["Finder::getExcludedExtensionMasks","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_getExcludedExtensionMasks","()","",2],["Finder::setDepth","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_setDepth","(int $depth)","",2],["Finder::getDepth","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_getDepth","()","",2],["Finder::setIteratorFlags","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_setIteratorFlags","(int $flags)","",2],["Finder::getIteratorFlags","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_getIteratorFlags","()","",2],["Finder::setFlag","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_setFlag","($flag)","",2],["Finder::getFlag","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_getFlag","()","",2],["Finder::files","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_files","()","",2],["Finder::dirs","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_dirs","()","",2],["Finder::links","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_links","()","",2],["Finder::dots","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_dots","()","",2],["Finder::depth","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_depth","($depth)","",2],["Finder::name","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_name","($mask)","",2],["Finder::notName","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_notName","($mask)","",2],["Finder::extension","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_extension","($mask)","",2],["Finder::notExtension","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_notExtension","($mask)","",2],["Finder::in","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_in","($path)","",2],["Finder::notIn","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_notIn","($path)","",2],["Finder::root","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_root","($path)","",2],["Finder::images","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_images","()","",2],["Finder::videos","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_videos","()","",2],["Finder::is","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_is","($extension)","",2],["Finder::isFile","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_isFile","()","",2],["Finder::isDir","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_isDir","()","",2],["Finder::isLink","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_isLink","()","",2],["Finder::isImage","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_isImage","()","",2],["Finder::isVideo","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_isVideo","()","",2],["Finder::isDotFile","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_isDotFile","()","",2],["Finder::getIterator","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_getIterator","()","",2],["Finder::current","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_current","()","",2],["Finder::key","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_key","()","",2],["Finder::next","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_next","()","",2],["Finder::rewind","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_rewind","()","",2],["Finder::valid","WebFilesystem\\Finder","WebFilesystem\/Finder.html#method_valid","()","",2],["WebFileInfo::__construct","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method___construct","(string $file_name, string $root_dir = null, int $flags = 272)","Construct a new WebFileInfo object",2],["WebFileInfo::setFlags","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_setFlags","(int $flags)","Set the object's flags",2],["WebFileInfo::getFlags","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_getFlags","()","Gets the object's flags value",2],["WebFileInfo::getExtension","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_getExtension","()","Gets the object extension (not defined before PHP 5.3.6)",2],["WebFileInfo::getRealPath","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_getRealPath","()","Gets the object realpath if found",2],["WebFileInfo::getFilename","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_getFilename","()","Gets the object file name as it was passed to the constructor",2],["WebFileInfo::setRootDir","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_setRootDir","(string $dir_name)","Sets the object's root directory",2],["WebFileInfo::getRootDir","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_getRootDir","()","Gets the object's root directory",2],["WebFileInfo::setWebPath","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_setWebPath","(string $path)","Sets the object web path (relative to `$root_dir`)",2],["WebFileInfo::getWebPath","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_getWebPath","()","Gets the object's web path",2],["WebFileInfo::getRealWebPath","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_getRealWebPath","()","Gets the object's web real path (with the file name)",2],["WebFileInfo::exists","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_exists","()","Check if the object exists in the server filesystem",2],["WebFileInfo::pathExists","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_pathExists","()","Check if the object path (not the file itself but its",2],["WebFileInfo::rootDirExists","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_rootDirExists","()","Check if the object's root directory exists in the",2],["WebFileInfo::getHumanReadableFilename","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_getHumanReadableFilename","()","Gets the directory name transformed to be displayed",2],["WebFileInfo::getStat","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_getStat","()","Get the PHP standard `stat()` function result",2],["WebFileInfo::getMimeType","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_getMimeType","()","Get the `MIME` type of the object",2],["WebFileInfo::getCharset","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_getCharset","()","Get the `MIME` charset of the object",2],["WebFileInfo::getMime","WebFilesystem\\WebFileInfo","WebFilesystem\/WebFileInfo.html#method_getMime","()","Get the full `MIME` information of the object",2],["WebFilesystem::slashDirname","WebFilesystem\\WebFilesystem","WebFilesystem\/WebFilesystem.html#method_slashDirname","(string $dir_name)","Returns a directory name with the trailing slash if",2],["WebFilesystem::getHumanReadableName","WebFilesystem\\WebFilesystem","WebFilesystem\/WebFilesystem.html#method_getHumanReadableName","(string $file_name)","Render a human readable string from a file name",2],["WebFilesystem::getExtensionName","WebFilesystem\\WebFilesystem","WebFilesystem\/WebFilesystem.html#method_getExtensionName","(string $file_name)","Returns the extension of a file name",2],["WebFilesystem::getTransformedFilesize","WebFilesystem\\WebFilesystem","WebFilesystem\/WebFilesystem.html#method_getTransformedFilesize","(float $size, int $round = 3, string $dec_delimiter = &#039;,&#039;)","Returns a formatted file size in bytes or derived unit",2],["WebFilesystem::getDateTimeFromTimestamp","WebFilesystem\\WebFilesystem","WebFilesystem\/WebFilesystem.html#method_getDateTimeFromTimestamp","(int $stamp)","Returns a `DateTime` object from a timestamp",2],["WebFilesystem::isCommonFile","WebFilesystem\\WebFilesystem","WebFilesystem\/WebFilesystem.html#method_isCommonFile","(string $file_name)","Tests if a file name seems to be a valid one (also",2],["WebFilesystem::isDotFile","WebFilesystem\\WebFilesystem","WebFilesystem\/WebFilesystem.html#method_isDotFile","(string $file_name)","Tests if a file name begins with a dot (also works",2],["WebFilesystem::isCommonImage","WebFilesystem\\WebFilesystem","WebFilesystem\/WebFilesystem.html#method_isCommonImage","(string $file_name)","Tests if a file name seems to have a common image's",2],["WebFilesystem::isCommonVideo","WebFilesystem\\WebFilesystem","WebFilesystem\/WebFilesystem.html#method_isCommonVideo","(string $file_name)","Tests if a file name seems to have a common video's",2],["WebFilesystemIterator::__construct","WebFilesystem\\WebFilesystemIterator","WebFilesystem\/WebFilesystemIterator.html#method___construct","(string $path, int $flags = 16432)","Overwriting the constructor to use the new `setFlags()`",2],["WebFilesystemIterator::setFlags","WebFilesystem\\WebFilesystemIterator","WebFilesystem\/WebFilesystemIterator.html#method_setFlags","(int $flags = null)","Overwriting the default `setFlags()` method to accept",2],["WebFilesystemIterator::getFlags","WebFilesystem\\WebFilesystemIterator","WebFilesystem\/WebFilesystemIterator.html#method_getFlags","()","Overwriting the default `getFlags()` method to accept",2],["WebFilesystemIterator::current","WebFilesystem\\WebFilesystemIterator","WebFilesystem\/WebFilesystemIterator.html#method_current","()","Overwriting the default `current()` method to return",2],["WebFilesystemIterator::rewind","WebFilesystem\\WebFilesystemIterator","WebFilesystem\/WebFilesystemIterator.html#method_rewind","()","Overwriting the default `rewind()` method to skip files",2],["WebFilesystemIterator::next","WebFilesystem\\WebFilesystemIterator","WebFilesystem\/WebFilesystemIterator.html#method_next","()","Overwriting the default `next()` method to skip files",2],["WebFilesystemIterator::count","WebFilesystem\\WebFilesystemIterator","WebFilesystem\/WebFilesystemIterator.html#method_count","()","Implementation of the `count()` method of the `Countable`",2],["WebRecursiveDirectoryIterator::__construct","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method___construct","(string $path, int $flags = 16432, <abbr title=\"WebFilesystem\\callback\">callback<\/abbr> $file_validation_callback = null, <abbr title=\"WebFilesystem\\callback\">callback<\/abbr> $directory_validation_callback = null)","",2],["WebRecursiveDirectoryIterator::setFileClass","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method_setFileClass","(string $class_name = null)","Set a class name to build each item",2],["WebRecursiveDirectoryIterator::getFileClass","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method_getFileClass","()","Get the class name to build each item",2],["WebRecursiveDirectoryIterator::setFileValidationCallback","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method_setFileValidationCallback","($callback)","Set a valid callback to validate each file item",2],["WebRecursiveDirectoryIterator::getFileValidationCallback","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method_getFileValidationCallback","()","Set a valid callback to validate each file item",2],["WebRecursiveDirectoryIterator::setDirectoryValidationCallback","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method_setDirectoryValidationCallback","($callback)","Set a valid callback to validate each directory item",2],["WebRecursiveDirectoryIterator::getDirectoryValidationCallback","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method_getDirectoryValidationCallback","()","Set a valid callback to validate each directory item",2],["WebRecursiveDirectoryIterator::getChildren","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method_getChildren","()","Implementing the `getChildren()` method to return this",2],["WebRecursiveDirectoryIterator::getSubPath","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method_getSubPath","()","Implementing the `getSubPath()` method",2],["WebRecursiveDirectoryIterator::getSubPathname","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method_getSubPathname","()","Implementing the `getSubPathname()` method",2],["WebRecursiveDirectoryIterator::hasChildren","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method_hasChildren","($allow_links = false)","Implementing the `hasChildren()` method",2],["WebRecursiveDirectoryIterator::seek","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method_seek","($position)","Implementing the `seek()` method of the `Seekable`",2],["WebRecursiveDirectoryIterator::current","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method_current","()","Overwriting the default `current()` method to use the",2],["WebRecursiveDirectoryIterator::rewind","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method_rewind","()","Overwriting the default `rewind()` method to skip files",2],["WebRecursiveDirectoryIterator::next","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method_next","()","Overwriting the default `next()` method to skip files",2],["WebRecursiveDirectoryIterator::recursiveCount","WebFilesystem\\WebRecursiveDirectoryIterator","WebFilesystem\/WebRecursiveDirectoryIterator.html#method_recursiveCount","()","Implementation of the `count()` method on each recursion",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']